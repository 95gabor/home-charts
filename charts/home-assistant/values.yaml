# Default values for home-assistant.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: homeassistant/home-assistant
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

homeAssistant:
  timezone: Europe/Budapest
  configurations:
    configuration.yaml: |
      default_config:

      group: !include groups.yaml
      script: !include scripts.yaml
      scene: !include scenes.yaml
      # automation: !include automations.yaml
    groups.yaml: |
      # place your groups here
    scripts.yaml: |
      # place your scripts here
    scenes.yaml: |
      # place your scenes here
  secrets: []
    # postgres-url:
    #   key: postgres_url
    #   secretName: home-assistant-database-credentials
    #   subPath: POSTGRES_URL

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

container:
  port: 8123

initialDelaySeconds: 90

env: []

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80


# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

persistence:
  # storageClass: ''
  size: 4Gi
  accessMode: ReadWriteOnce

# TLS certificate configuration via cert-manager
certificate:
  enabled: false
  secretName: home-assistant-tls
  domain: home.example.com
  additionalHosts: []
  duration: ""
  renewBefore: ""
  issuer:
    group: ""
    kind: ""
    name: ""
  privateKey:
    rotationPolicy: Never
    encoding: PKCS1
    algorithm: RSA
    size: 2048
  annotations: {}
  usages: []


serviceMonitor:
  enabled: false
  interval: 30s
  relabelings: []
  metricRelabelings: []
  selector: {}
  scheme: ""
  tlsConfig: {}
  namespace: "" # "monitoring"
  additionalLabels: {}
  annotations: {}

postgresOperator:
  enabled: false
  annotations: {}
  databaseName: home-assistant
  dropOnDelete: false
  masterRole: home-assistant
  schema: home-assistant
  role: home-assistant
  secretName: home-assistant-database-credentials
  privileges: OWNER