{{- $initCommand := "" }}
{{- $separator := "" }}

{{- range $key, $val := .Values.homeAssistant.secrets }}
{{- $initCommand = printf "%s%s echo \"%s: $(cat /etc/secrets/%s)\" >> /etc/secrets/secrets.yaml" $initCommand $separator $val.key $val.key }}
{{- $separator = " &&" }}
{{- end }}

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "home-assistant.fullname" . }}
  labels:
    {{- include "home-assistant.labels" . | nindent 4 }}
  namespace: {{ .Release.Namespace | quote }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "home-assistant.selectorLabels" . | nindent 6 }}
  serviceName: {{ include "home-assistant.fullname" . }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "home-assistant.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.terminationGracePeriodSeconds }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      {{- end }}
      {{- if .Values.hostNetwork }}
      hostNetwork: {{ .Values.hostNetwork }}
      {{- end }}
      {{- with .Values.dnsConfig }}
      dnsConfig:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      dnsPolicy: {{ .Values.dnsPolicy }}
      {{- if gt (len .Values.homeAssistant.secrets) 0 }}
      initContainers:
        - name: init-container
          image: alpine:3.18.5
          command: ['sh', '-c', 'echo "" > /etc/secrets/secrets.yaml && {{ $initCommand }}']
          volumeMounts:
          - name: secrets
            mountPath: /etc/secrets
          {{- range $key, $val := .Values.homeAssistant.secrets }}
          - name: {{ $key | quote }}
            mountPath: "/etc/secrets/{{ $val.key }}"
            subPath: {{ $val.subPath | quote }}
            readOnly: true
          {{- end }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            {{- with (concat .Values.env ) }}
                {{- toYaml . | nindent 10 }}
            {{- end }}
            - name: TZ
              value: {{ .Values.homeAssistant.timezone }}
            {{- with .Values.envFrom }}
            envFrom:
                {{- toYaml . | nindent 10 }}
            {{- end }}
          volumeMounts:
            - name: config
              mountPath: /config
            {{- if gt (len .Values.homeAssistant.secrets) 0 }}
            - name: secrets
              mountPath: "/config/secrets.yaml"
              subPath: secrets.yaml
              readOnly: true
            {{- end }}
            {{- range $key, $val := .Values.homeAssistant.configurations }}
            - name: configuration
              mountPath: "/config/{{ $key }}"
              subPath: {{ $key | quote }}
              readOnly: true
            {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.container.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
        - name: config
          persistentVolumeClaim:
            claimName: {{ include "home-assistant.fullname" . }}
        - name: configuration
          configMap:
            name: {{ include "home-assistant.fullname" . }}
        {{- range $key, $val := .Values.homeAssistant.secrets }}
        - name: {{ $key | quote }}
          secret:
            secretName: {{ $val.secretName | quote }}
        {{- end }}
        {{- if gt (len .Values.homeAssistant.secrets) 0 }}
        - name: secrets
          emptyDir: {}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
